// <auto-generated />
using System;
using Library.Data.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.Data.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20201126172458_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.Data.Database.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Adventure"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Horror"
                        });
                });

            modelBuilder.Entity("Library.Data.Database.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCEO")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Test",
                            IsCEO = false,
                            IsManager = true,
                            LastName = "Manager",
                            Salary = 13.8m
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Test",
                            IsCEO = false,
                            IsManager = false,
                            LastName = "Regular",
                            ManagerId = 1,
                            Salary = 3.3750m
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Test",
                            IsCEO = true,
                            IsManager = false,
                            LastName = "CEO",
                            Salary = 16.3500m
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Test",
                            IsCEO = false,
                            IsManager = true,
                            LastName = "Manager2",
                            ManagerId = 1,
                            Salary = 15.5250m
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Test",
                            IsCEO = false,
                            IsManager = false,
                            LastName = "Regular",
                            ManagerId = 4,
                            Salary = 4.5000m
                        });
                });

            modelBuilder.Entity("Library.Data.Database.Models.LibraryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Borrower")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBorrowable")
                        .HasColumnType("bit");

                    b.Property<int?>("Pages")
                        .HasColumnType("int");

                    b.Property<int?>("RunTimeMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("LibraryItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "James Verne",
                            BorrowDate = new DateTime(2020, 6, 19, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Borrower = "Carina",
                            CategoryId = 3,
                            IsBorrowable = false,
                            Pages = 200,
                            Title = "Jorden runt på 80 dagar",
                            Type = "Book"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Kristina Apppelqvist",
                            CategoryId = 1,
                            IsBorrowable = true,
                            Pages = 200,
                            Title = "De blå damerna",
                            Type = "Book"
                        },
                        new
                        {
                            Id = 3,
                            BorrowDate = new DateTime(2020, 11, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Borrower = "Pär",
                            CategoryId = 2,
                            IsBorrowable = false,
                            RunTimeMinutes = 100,
                            Title = "Metallica",
                            Type = "Dvd"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            IsBorrowable = true,
                            RunTimeMinutes = 100,
                            Title = "Granner ljuger",
                            Type = "AudioBook"
                        });
                });

            modelBuilder.Entity("Library.Data.Database.Models.LibraryItem", b =>
                {
                    b.HasOne("Library.Data.Database.Models.Category", "Category")
                        .WithMany("LibraryItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
